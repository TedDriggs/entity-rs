error[E0277]: the trait bound `Value: From<T>` is not satisfied
 --> $DIR/generic-field-cannot-convert-to-from-value.rs:3:17
  |
3 | #[derive(Clone, Ent)]
  |                 ^^^ the trait `From<T>` is not implemented for `Value`
  |
  = note: required because of the requirements on the impl of `Into<Value>` for `T`
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<T as TryFrom<Value>>::Error == &str`
 --> $DIR/generic-field-cannot-convert-to-from-value.rs:3:17
  |
3 | #[derive(Clone, Ent)]
  |                 ^^^ expected enum `Infallible`, found `&str`
  |
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `T: From<Value>` is not satisfied
 --> $DIR/generic-field-cannot-convert-to-from-value.rs:3:17
  |
3 | #[derive(Clone, Ent)]
  |                 ^^^ the trait `From<Value>` is not implemented for `T`
  |
  = note: required because of the requirements on the impl of `Into<T>` for `Value`
  = note: required because of the requirements on the impl of `TryFrom<Value>` for `T`
  = note: required because of the requirements on the impl of `TryInto<T>` for `Value`
  = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider further restricting this bound
  |
4 | struct TestEnt<T: Clone + 'static + From<Value>> {
  |                                   ^^^^^^^^^^^^^
